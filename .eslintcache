[{"/Users/junmanbae/Projects/TOIS/client/src/index.js":"1","/Users/junmanbae/Projects/TOIS/client/src/App.js":"2","/Users/junmanbae/Projects/TOIS/client/src/reportWebVitals.js":"3","/Users/junmanbae/Projects/TOIS/client/src/Pages/Auth/index.js":"4","/Users/junmanbae/Projects/TOIS/client/src/config/firebase.js":"5","/Users/junmanbae/Projects/TOIS/client/src/Pages/Dashboard/index.js":"6","/Users/junmanbae/Projects/TOIS/client/src/utils/useLogStatus.js":"7","/Users/junmanbae/Projects/TOIS/client/src/Pages/Auth/Signup.js":"8","/Users/junmanbae/Projects/TOIS/client/src/pages/Auth/Signup.js":"9","/Users/junmanbae/Projects/TOIS/client/src/pages/Dashboard/index.js":"10","/Users/junmanbae/Projects/TOIS/client/src/pages/Auth/index.js":"11","/Users/junmanbae/Projects/TOIS/client/src/components/Stock/index.js":"12","/Users/junmanbae/Projects/TOIS/client/src/pages/BasicInfo/index.js":"13","/Users/junmanbae/Projects/TOIS/client/src/pages/Stocks/index.js":"14","/Users/junmanbae/Projects/TOIS/client/src/utils/getPrice.js":"15"},{"size":500,"mtime":1610438110477,"results":"16","hashOfConfig":"17"},{"size":1285,"mtime":1612032814255,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1610438110478,"results":"19","hashOfConfig":"17"},{"size":1763,"mtime":1610924691985,"results":"20","hashOfConfig":"17"},{"size":518,"mtime":1611211483603,"results":"21","hashOfConfig":"17"},{"size":4364,"mtime":1610930640509,"results":"22","hashOfConfig":"17"},{"size":508,"mtime":1610823672272,"results":"23","hashOfConfig":"17"},{"size":1763,"mtime":1610924887757,"results":"24","hashOfConfig":"17"},{"size":1881,"mtime":1612027320935,"results":"25","hashOfConfig":"17"},{"size":3117,"mtime":1612321775020,"results":"26","hashOfConfig":"17"},{"size":1872,"mtime":1610934044682,"results":"27","hashOfConfig":"17"},{"size":642,"mtime":1612033964677,"results":"28","hashOfConfig":"17"},{"size":2077,"mtime":1612032526691,"results":"29","hashOfConfig":"17"},{"size":2929,"mtime":1612033535306,"results":"30","hashOfConfig":"17"},{"size":585,"mtime":1612035288427,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"13bcfhr",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/junmanbae/Projects/TOIS/client/src/index.js",[],["68","69"],"/Users/junmanbae/Projects/TOIS/client/src/App.js",[],"/Users/junmanbae/Projects/TOIS/client/src/reportWebVitals.js",[],"/Users/junmanbae/Projects/TOIS/client/src/Pages/Auth/index.js",[],"/Users/junmanbae/Projects/TOIS/client/src/config/firebase.js",[],"/Users/junmanbae/Projects/TOIS/client/src/Pages/Dashboard/index.js",[],"/Users/junmanbae/Projects/TOIS/client/src/utils/useLogStatus.js",["70"],"import { useState, useEffect } from 'react'\nimport { firebaseInit } from '../config/firebase'\n\nexport const STATUS = {\n    LOGGING: 'logging',\n    LOGGED_IN: 'loggedIn',\n    LOGGED_OUT: 'loggedOut'\n}\n\nexport const useLogStatus = () => {\n    const [status, setStatus] = useState(STATUS.LOGGING);\n\n    firebaseInit.auth().onAuthStateChanged(user => {\n        if (user) {\n            setStatus(STATUS.LOGGED_IN)\n        } else {\n            setStatus(STATUS.LOGGED_OUT)\n        }\n    })\n    \n    return status\n}","/Users/junmanbae/Projects/TOIS/client/src/Pages/Auth/Signup.js",[],"/Users/junmanbae/Projects/TOIS/client/src/pages/Auth/Signup.js",[],"/Users/junmanbae/Projects/TOIS/client/src/pages/Dashboard/index.js",["71","72","73","74"],"import React, { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Stock } from '../../components/Stock'\nimport { db, firebaseInit } from '../../config/firebase'\nimport { getPrice } from '../../utils/getPrice'\n\n// TODO: add loading\nexport const Dashboard = () => {\n    const [data, setData] = useState({})\n    const [priceList, setPriceList] = useState({})\n    \n    const history = useHistory()\n    const user = firebaseInit.auth().currentUser\n\n    useEffect(() => {\n        data.stocks && data.stocks.map(stock => {\n            console.log('test', stock.ticker)\n            setPriceList({\n                ...priceList,\n                [stock.ticker]: stock.ticker\n            })\n        })\n    }, [data])\n\n    useEffect(() => {\n        if (user) {\n            db.collection(\"users\").doc(user.uid).get()\n                .then(doc => {\n                    if (doc.exists) {\n                        setData(doc.data())\n                    } else {\n                        history.push('/info')\n                    }\n                })\n                .catch(err => console.log('error', err))\n        }\n    }, [user])\n\n    // TODO: move to util\n    const signOut = () => {\n        firebaseInit.auth().signOut()\n            .then(() => {\n                console.log('signed out')\n                history.push('/')\n            })\n            .catch((error) => {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                \n                console.log(errorCode, errorMessage)\n            })\n    }\n\n    console.log(priceList)\n\n    return (\n        <div>\n            <div>\n                hello, {user ? user.email : ''}\n                <button onClick={signOut}>Sign out</button>\n            </div>\n            <hr />\n            <div>\n                <Link to=\"/stocks\">Add your stocks</Link>\n                <h1>Your info</h1>\n                <p>\n                    otherIncome: {data.otherIncome}\n                </p>\n                <p>\n                    status: {data.status}\n                </p>\n                <p>\n                    deduction: {data.deduction}\n                </p>\n                <table>\n                    <thead>\n                        <tr>\n                            <td>Symbol</td>\n                            <td>Price</td>\n                            <td>Amount</td>\n                            <td>Total</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.stocks && data.stocks.map((stock, idx) => {\n                            return (\n                                <tr key={idx}>\n                                    <td>{stock.ticker}</td>\n                                    <td><Stock ticker={stock.ticker} /></td>\n                                    <td>{stock.amount}</td>\n                                    <td></td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}","/Users/junmanbae/Projects/TOIS/client/src/pages/Auth/index.js",[],"/Users/junmanbae/Projects/TOIS/client/src/components/Stock/index.js",["75"],"import React, { useEffect, useState } from 'react'\n\nexport const Stock = ({ ticker }) => {\n\tconst [price, setPrice] = useState('???');\n\n\tconst getStockPrice = async ticker => {\n\t\tconsole.log(\"Getting data\");\n\t\tconst request = await fetch(`https://us-central1-tois-f192d.cloudfunctions.net/api/stock/price`, {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t},\n\t\t\n\t\t\tbody: JSON.stringify({\n\t\t\t\tticker: ticker,\n\t\t\t})\n\t\t});\n\t  \n\t\tconst data = await request.json();\n\t\t\n\t\tsetPrice(data.close);\n\t};\n\n\tuseEffect(() => {\n\t\tgetStockPrice(ticker)\n\t}, [])\n    \n    return (\n        <>\n            ${price}\n        </>\n    )\n}\n",["76","77"],"/Users/junmanbae/Projects/TOIS/client/src/pages/BasicInfo/index.js",[],"/Users/junmanbae/Projects/TOIS/client/src/pages/Stocks/index.js",["78"],"import React, { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { db, firebaseInit } from '../../config/firebase'\n\nexport const Stocks = () => {\n    const [data, setData] = useState({})\n    const [stockForm, setStockForm] = useState({\n        ticker: '',\n        amount: 0,\n        baseCost: 0,\n        boughtDate: '',\n    })\n\n    const [stockRows, addStockRow] = useState([])\n\n    const history = useHistory()\n    const user = firebaseInit.auth().currentUser\n\n    useEffect(() => {\n        if (user) {\n            db.collection(\"users\").doc(user.uid).get()\n                .then(doc => {\n                    if (doc.exists) {\n                        setData(doc.data())\n                    } else {\n                        history.push('/info')\n                    }\n                })\n                .catch(err => console.log('error', err))\n        }\n    }, [user])\n\n    const updateStockField = e => {\n        setStockForm({\n            ...stockForm,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const addRow = e => {\n        e.preventDefault()\n\n        addStockRow([ ...stockRows, stockForm ])\n    }\n\n    const updateDoc = e => {\n        e.preventDefault()\n\n        if (user) {\n            db.collection('users').doc(user.uid).set({\n                ...data,\n                stocks: stockRows\n            }).then(() => {\n                console.log('added')\n            })\n        }\n    }\n\n    return (\n        <div>\n            <Link to=\"/dashboard\">Back to dashboard</Link>\n            <h1>Add your stocks</h1>\n            <form>\n                <div>\n                    <label>Add your stocks</label><br />\n                    <input type=\"text\" onChange={updateStockField} name=\"ticker\" placeholder=\"ticker\" />\n                    <input type=\"number\" onChange={updateStockField} name=\"amount\" placeholder=\"amount\" />\n                    <input type=\"number\" onChange={updateStockField} name=\"baseCost\" placeholder=\"baseCost\" />\n                    <input type=\"date\" onChange={updateStockField} name=\"boughtDate\" placeholder=\"boughtDate\" />\n                    {stockRows.map((_, idx) => (\n                        <div key={`stock-${idx}`}>\n                            <input type=\"text\" onChange={updateStockField} name=\"ticker\" placeholder=\"ticker\" />\n                            <input type=\"number\" onChange={updateStockField} name=\"amount\" placeholder=\"amount\" />\n                            <input type=\"number\" onChange={updateStockField} name=\"baseCost\" placeholder=\"baseCost\" />\n                            <input type=\"date\" onChange={updateStockField} name=\"boughtDate\" placeholder=\"boughtDate\" />\n                        </div>\n                    ))}\n                    <button onClick={addRow}>add item</button>\n                </div>\n                <button onClick={updateDoc}>submit</button>\n            </form>\n        </div>\n    )\n}","/Users/junmanbae/Projects/TOIS/client/src/utils/getPrice.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":20,"nodeType":"85","messageId":"86","endLine":1,"endColumn":29},{"ruleId":"83","severity":1,"message":"87","line":5,"column":10,"nodeType":"85","messageId":"86","endLine":5,"endColumn":18},{"ruleId":"88","severity":1,"message":"89","line":16,"column":46,"nodeType":"90","messageId":"91","endLine":16,"endColumn":48},{"ruleId":"92","severity":1,"message":"93","line":23,"column":8,"nodeType":"94","endLine":23,"endColumn":14,"suggestions":"95"},{"ruleId":"92","severity":1,"message":"96","line":37,"column":8,"nodeType":"94","endLine":37,"endColumn":14,"suggestions":"97"},{"ruleId":"92","severity":1,"message":"98","line":26,"column":5,"nodeType":"94","endLine":26,"endColumn":7,"suggestions":"99"},{"ruleId":"79","replacedBy":"100"},{"ruleId":"81","replacedBy":"101"},{"ruleId":"92","severity":1,"message":"96","line":31,"column":8,"nodeType":"94","endLine":31,"endColumn":14,"suggestions":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'getPrice' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'priceList'. Either include it or remove the dependency array. You can also do a functional update 'setPriceList(p => ...)' if you only need 'priceList' in the 'setPriceList' call.","ArrayExpression",["105"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["106"],"React Hook useEffect has a missing dependency: 'ticker'. Either include it or remove the dependency array.",["107"],["103"],["104"],["108"],"no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"111","fix":"115"},"Update the dependencies array to be: [data, priceList]",{"range":"116","text":"117"},"Update the dependencies array to be: [history, user]",{"range":"118","text":"119"},"Update the dependencies array to be: [ticker]",{"range":"120","text":"121"},{"range":"122","text":"119"},[743,749],"[data, priceList]",[1152,1158],"[history, user]",[568,570],"[ticker]",[907,913]]